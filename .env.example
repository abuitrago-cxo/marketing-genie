# Enhanced AI Agent Assistant Environment Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# LLM Provider API Keys
# =============================================================================

# Google Gemini API Key (Required)
GEMINI_API_KEY=your_gemini_api_key_here

# Anthropic Claude API Key (Optional - for multi-LLM support)
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# OpenAI API Key (Optional - for multi-LLM support)
OPENAI_API_KEY=your_openai_api_key_here

# =============================================================================
# LangSmith Configuration (Optional - for monitoring)
# =============================================================================

LANGSMITH_API_KEY=your_langsmith_api_key_here
LANGSMITH_PROJECT=ai-agent-assistant

# =============================================================================
# Database Configuration
# =============================================================================

# PostgreSQL Database URL
POSTGRES_URI=postgres://postgres:postgres@localhost:5433/postgres?sslmode=disable

# Redis Cache URL
REDIS_URI=redis://localhost:6379

# =============================================================================
# Enhanced Features Configuration
# =============================================================================

# Enable enhanced UI components
ENABLE_ENHANCED_UI=true

# Enable multi-LLM provider support
ENABLE_MULTI_LLM=true

# Enable intelligent agent routing
ENABLE_AGENT_ROUTING=true

# Enable real-time WebSocket communication
ENABLE_WEBSOCKETS=true

# =============================================================================
# System Configuration
# =============================================================================

# Logging level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Maximum concurrent tasks per agent
MAX_CONCURRENT_TASKS=10

# Health check interval in seconds
HEALTH_CHECK_INTERVAL=30

# Request timeout in seconds
REQUEST_TIMEOUT=120

# =============================================================================
# Performance Configuration
# =============================================================================

# Maximum tokens per request
MAX_TOKENS_PER_REQUEST=4000

# Default temperature for LLM requests
DEFAULT_TEMPERATURE=0.7

# Cache TTL in seconds
CACHE_TTL=3600

# Rate limiting (requests per minute)
RATE_LIMIT_RPM=60

# =============================================================================
# Security Configuration
# =============================================================================

# JWT Secret Key (generate a secure random string)
JWT_SECRET_KEY=your_jwt_secret_key_here

# CORS allowed origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:8080

# Enable API key authentication
ENABLE_API_KEY_AUTH=false

# API key for external access (if enabled)
API_KEY=your_api_key_here

# =============================================================================
# Development Configuration
# =============================================================================

# Environment (development, staging, production)
ENVIRONMENT=development

# Enable debug mode
DEBUG=true

# Enable hot reload
HOT_RELOAD=true

# Enable detailed error messages
DETAILED_ERRORS=true

# =============================================================================
# Monitoring and Analytics
# =============================================================================

# Enable metrics collection
ENABLE_METRICS=true

# Metrics export interval in seconds
METRICS_INTERVAL=60

# Enable performance profiling
ENABLE_PROFILING=false

# =============================================================================
# External Services Configuration
# =============================================================================

# Webhook URL for notifications (optional)
WEBHOOK_URL=

# Slack webhook for alerts (optional)
SLACK_WEBHOOK_URL=

# Email configuration for notifications (optional)
SMTP_HOST=
SMTP_PORT=587
SMTP_USER=
SMTP_PASSWORD=
SMTP_FROM=

# =============================================================================
# Advanced Configuration
# =============================================================================

# Custom model configurations (JSON format)
CUSTOM_MODEL_CONFIG={}

# Feature flags (JSON format)
FEATURE_FLAGS={}

# Custom agent configurations (JSON format)
AGENT_CONFIG={}

# =============================================================================
# Docker Compose Profiles
# =============================================================================

# Available profiles: dev, prod
# Use with: docker-compose --profile dev up
COMPOSE_PROFILES=dev
