volumes:
  langgraph-data:
    driver: local
services:
  langgraph-redis:
    image: docker.io/redis:6
    healthcheck:
      test: redis-cli ping
      interval: 5s
      timeout: 1s
      retries: 5
  langgraph-postgres:
    image: docker.io/postgres:16
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - langgraph-data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U postgres
      start_period: 10s
      timeout: 1s
      retries: 5
      interval: 5s
  langgraph-api:
    image: gemini-fullstack-langgraph-enhanced
    ports:
      - "8123:8000"
    depends_on:
      langgraph-redis:
        condition: service_healthy
      langgraph-postgres:
        condition: service_healthy
    environment:
      # Multi-LLM Provider Support
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}

      # LangSmith Integration
      LANGSMITH_API_KEY: ${LANGSMITH_API_KEY}

      # Database and Cache Configuration
      REDIS_URI: redis://langgraph-redis:6379
      POSTGRES_URI: postgres://postgres:postgres@langgraph-postgres:5432/postgres?sslmode=disable

      # Enhanced Features Configuration
      ENABLE_ENHANCED_UI: "true"
      ENABLE_MULTI_LLM: "true"
      ENABLE_AGENT_ROUTING: "true"

      # System Configuration
      LOG_LEVEL: "INFO"
      MAX_CONCURRENT_TASKS: "10"
      HEALTH_CHECK_INTERVAL: "30"

    # Health check for the enhanced API
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/enhanced/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Admin Interface (Optional - for development)
  redis-commander:
    image: rediscommander/redis-commander:latest
    hostname: redis-commander
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:langgraph-redis:6379
    depends_on:
      - langgraph-redis
    profiles:
      - dev

  # PostgreSQL Admin Interface (Optional - for development)
  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    depends_on:
      - langgraph-postgres
    profiles:
      - dev

  # Nginx Load Balancer (Optional - for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - langgraph-api
    profiles:
      - prod
